name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up micromamba + create env from environment.yml
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: 1.5.11-0         # <-- pin to a valid x.y.z-0 form
          environment-file: environment.yml
          environment-name: qaqc
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=3.11

      - name: Show environment
        run: micromamba run -n qaqc bash -lc "python -V && which python"

      - name: Sanity imports
        run: |
          micromamba run -n qaqc python - <<'PY'
          import numpy, rasterio, shapely, skimage, typer
          print("imports OK")
          PY

      - name: Install package (editable)
        run: micromamba run -n qaqc pip install -e .[app]

      # ---- Mini pipeline smoke test (writes small outputs) ----
      - name: Mini pipeline smoke test
        run: |
          micromamba run -n qaqc python - <<'PY'
          import numpy as np
          from pathlib import Path
          from affine import Affine
          from survey_surface.grid import write_geotiff
          from survey_surface.contours import contours_geojson_from_raster
          Path("outputs").mkdir(exist_ok=True)
          arr = (np.random.rand(60, 60) * 12.0 + 500.0)
          transform = Affine.translation(500000, 2500000) * Affine.scale(2.0, -2.0)
          write_geotiff("outputs/dem.tif", arr, transform, "EPSG:32638")
          contours_geojson_from_raster("outputs/dem.tif", 1.0, "outputs/contours.geojson")
          print("OK: wrote outputs/dem.tif and outputs/contours.geojson")
          PY

      - name: CLI import (sanity)
        run: micromamba run -n qaqc python -c "import importlib; importlib.import_module('survey_surface.cli'); print('CLI import OK')"

      - name: Upload mini outputs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mini-pipeline-outputs
          path: |
            outputs/dem.tif
            outputs/contours.geojson
          if-no-files-found: ignore
